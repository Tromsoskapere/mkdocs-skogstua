name: Build and Deploy MkDocs (SFTP)

# Kjører hver gang en endring blir pushet til 'main'-grenen
on:
  push:
    branches:
      - main
  pull_request: # Kjører også på Pull Requests

# Jobben som skal gjøres
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # Bruker en standard Linux-maskin
    
    steps:
    # 1. Sjekker ut koden fra repoet
    - name: ⬇️ Checkout code
      uses: actions/checkout@v4

    # 2. Setter opp Python (som MkDocs trenger)
    - name: 🐍 Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.x

    # 3. Installerer MkDocs og alle pluginene dere bruker
    - name: 📦 Install MkDocs & Plugins
      run: |
        pip install mkdocs-material
        pip install mkdocs-awesome-pages-plugin
        pip install mkdocs-section-index
        pip install mkdocs-macros-plugin
        # Legg til 'pip install ...' for andre plugins her

    # 4. Bygger den statiske nettsiden
    # Denne kommandoen lager 'site/'-mappen med all HTML/CSS
    - name: 🔨 Build MkDocs site
      run: mkdocs build

# 5. Laster opp til webhotellet via rsync/ssh (Kun hvis det er 'main')
    - name: ⬆️ Upload to Server (rsync)
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        # 1. Opprett SSH-mappen
        mkdir -p ~/.ssh
        
        # 2. Installer den private nøkkelen
        echo "${{ secrets.SFTP_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        
        # 3. Legg til serveren i kjente verter (omgår "Permanently added" varselet)
        ssh-keyscan -H ${{ secrets.SFTP_HOST }} >> ~/.ssh/known_hosts
        
        # 4. Synkroniser 'site/'-mappen til serveren med rsync
        # -avz = archive, verbose, compress
        # --delete = sletter filer på serveren som ikke er i 'site/'
        rsync -avz --delete \
          ./site/ \
          ${{ secrets.SFTP_USER }}@${{ secrets.SFTP_HOST }}:${{ secrets.REMOTE_PATH }}
